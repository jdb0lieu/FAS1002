base_tables <- html_table(x = base_html_table)
#base_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]]) # erreur, une colonne n'est pas nommée de façon identique, donc ne fonctionne pas
names(base_tables[[3]])[1] <- "Province/Territoire"
base_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]])
base_table
tdv_table <- read_html(x = URL) %>%
html_elements(css = "table") %>%
html_table() %>%
purrr::map_dfr(rbind, .id = "type")
tdv_table
# Solution en Base R
# tdv_table$`Province/Territoire` <- ifelse(test = is.na(tdv_table$`Province/Territoire`),
#                                   yes = tdv_table$Territoire, no = tdv_table$`Province/Territoire`)
# tdv_table$Territoire <- NULL
# 2 colonnes identiques, mais avec des noms différents...
tdv_table$`Province/Territoire` <- coalesce(tdv_table$`Province/Territoire`, tdv_table$Territoire) #buggy, but works
tdv_table <- tdv_table %>% rename(prov_territ = `Province/Territoire`,
exploited_by = `Exploité par`,
airport = Aéroport)
tdv_table <- tdv_table %>% select(-Territoire) # drop Territoire
tdv_table$prov_territ %<>% na_if(y = "")
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
tdv_table <- tdv_table %>% extract(col = airport,
into = "airport_code",
regex = "\\(([A-Z]{3})\\)$",
remove = FALSE)
tdv_table$airport %<>% str_remove(pattern = "\\(.*\\)$") %>%
str_trim()
tdv_table <- tdv_table %>% mutate(type = case_when(type == 1 ~ "Petits aéroports",
type == 2 ~ "Aéroports nationaux",
type == 3 ~ "Aéroports nationaux exploités par des administrations territoriales"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(magrittr)
tibble(x = letters,
`alpha bet` = 1:26,
z = sample(100, 26))
tibble(x = letters,
`alphabet` = 1:26,
z = sample(100, 26))
tbl
view(tbl)
tbl$x
library(harvest)
library(rvest)
library(rvest)
URL <- "https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada"
base_raw_html <- read_html(x = URL)
base_html_table <- html_elements(x = base_raw_html, css = "table")
base_tables <- html_table(x = base_html_table)
#base_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]]) # erreur, une colonne n'est pas nommée de façon identique, donc ne fonctionne pas
names(base_tables[[3]])[1] <- "Province/Territoire"
base_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]])
base_table
View(base_table)
library(purrr)
View(tdv_table)
View(tbl)
View(tbl)
View(tdv_table)
URL <- "https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada"
base_raw_html <- read_html(x = URL)
base_html_table <- html_elements(x = base_raw_html, css = "table")
base_tables <- html_table(x = base_html_table)
View(base_table)
names(base_tables[[3]])[1] <- "Province/Territoire"
base_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]])
base_table
library(rvest)
URL <- "https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada"
tdv_table <- read_html(x = URL) %>%
html_elements(css = "table") %>%
html_table() %>%
purrr::map_dfr(rbind, .id = "type")
tdv_table
# 2 colonnes identiques, mais avec des noms différents...
tdv_table$`Province/Territoire` <- coalesce(tdv_table$`Province/Territoire`, tdv_table$Territoire) #buggy, but works
tdv_table <- tdv_table %>% rename(prov_territ = `Province/Territoire`,
exploited_by = `Exploité par`,
airport = Aéroport)
tdv_table <- tdv_table %>% select(-Territoire) # drop Territoire
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
tdv_table <- tdv_table %>% extract(col = airport, #colone à extraire
into = "airport_code", #on assigne dans quelle colone
regex = "\\(([A-Z]{3})\\)$", #il s'agit ici de mettre le pattern dans l'exemple au moins 3 lettres, de A-Z en majuscule
remove = FALSE) # dit si on enleve ou pas la colone
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
View(tdv_table)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
View(tdv_table)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
library(tidyr)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
tdv_table <- tdv_table %>% fill(prov_territ, direction = "down") # default is down
tdv_table <- tdv_table %>% fill(prov_territ)
View(tdv_table)
tdv_table <- tdv_table %>% fill(prov_territ)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down")
tdv_table <- tdv_table fill(prov_territ, .direction = "down")
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down")
View(tdv_table)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
tdv_table <- tdv_table %>% extract(col = airport, #colone à extraire
into = "airport_code", #on assigne dans quelle colone
regex = "\\(([A-Z]{3})\\)$", #il s'agit ici de mettre le pattern dans l'exemple au moins 3 lettres, de A-Z en majuscule
remove = FALSE) # dit si on enleve ou pas la colone
View(tdv_table)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(tidyverse)
tibble(x = letters,
`alphatblbet` = 1:26,
z = sample(100, 26))
(df <- data.frame(x = letters,
`alpha bet` = 1:26,
z = sample(100, 26)))
df$a
(tbl <- tibble::as_tibble(df))
tbl$a
tribble(
~x, ~y, ~z,
#--|--|---- cette ligne/commentaire indique seulement la séparation entre le header et les valeurs
"a", 2, 3.6,
"b", 1, 8.5
)
(wide_df <- tribble(
~subject_id, ~sex, ~control, ~cond50, ~cond100,
"A001", "Male", 7.9, 12.3, 10.7,
"A002", "Female", 6.3, 10.6,11.1,
"A003", "Female", 9.5, 13.1, 13.8,
"A004", "Male", 11.5, 13.4, 12.9))
(long_df <- tribble(
~subject, ~sex, ~condition, ~measurement,
"A001",   "M",   "control",        "7.9",
"A001",   "M",   "cond50",        "12.3",
"A001",   "M",   "cond100",        "10.7",
"A002",   "F",   "control",        "6.3",
"A002",   "F",   "cond50",        "10.6",
"A002",   "F",   "cond100",        "11.1",
"A003",   "F",   "control",        "9.5",
"A003",   "F",   "cond50",        "13.1",
"A003",   "F",   "cond100",        "13.8",
"A004",   "M",   "control",        "11.5",
"A004",   "M",   "cond50",        "13.4",
"A004",   "M",   "cond100",        "12.9"
))
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down") # default is down
tdv_table <- tdv_table %>% extract(col = airport, #colone à extraire
into = "airport_code", #on assigne dans quelle colone
regex = "\\(([A-Z]{3})\\)$", #il s'agit ici de mettre le pattern dans l'exemple au moins 3 lettres, de A-Z en majuscule
remove = FALSE) # dit si on enleve ou pas la colone
View(tdv_table)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down")
tdv_table <- tdv_table %>% extract(col = airport,
into = "airport_code", #on assigne dans quelle colone
regex = "\\(([A-Z]{3})\\)$",
remove = FALSE)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down")
tdv_table <- tdv_table %>% tydir:: extract(col = airport,
into = "airport_code", #on assigne dans quelle colone
regex = "\\(([A-Z]{3})\\)$",
remove = FALSE)
package(tidyr)
library(tidyr)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down")
tdv_table <- tdv_table %>% tydir:: extract(col = airport,
into = "airport_code", #on assigne dans quelle colone
regex = "\\(([A-Z]{3})\\)$",
remove = FALSE)
tdv_table <- tdv_table %>% fill(prov_territ, .direction = "down")
tdv_table <- tdv_table %>% tidyr:: extract(col = airport,
into = "airport_code", #on assigne dans quelle colone
regex = "\\(([A-Z]{3})\\)$",
remove = FALSE)
tdv_table <- tdv_table %>% select(-airport_code)
tdv_table$airport %<>% str_remove(pattern = "\\(.*\\)$") %>%
str_trim()
head (tdv_table)
tdv_table <- tdv_table %>% tidyr:: extract(col = exploited_by,
into = "phone", #on assigne dans quelle colone
regex = "\\((^[1-9]\d{2}-\d{3}-\d{4})\\)$",
remove = FALSE)
tdv_table <- tdv_table %>% tidyr:: extract(col = exploited_by,
into = "phone", #on assigne dans quelle colone
regex = "\\(([1-9]\d{2}-\d{3}-\d{4})\\)$",
remove = FALSE)
tdv_table <- tdv_table %>% tidyr:: extract(col = exploited_by,
into = "phone", #on assigne dans quelle colone
regex = "\\(([1-9]\d{3}-\d{3}-\d{4})\\)$",
remove = FALSE)
View(tdv_table)
View(tdv_table)
View(tdv_table)
tdv_table <- tdv_table %>% tidyr:: extract(col = exploited_by,
into = "phone", #on assigne dans quelle colone
regex = "\\d{3}[-.]\\d{3}[-.]\\d{4}",
remove = FALSE)
str_extract(phone,([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4}) )
str_extract(exploited_by,([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4}) )
str_extract(exploited_by,"([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4})" )
str_extract(tdv_table$exploited_by,"([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4})" )
tdv_table <- tdv_table %>% tidyr:: extract(col = exploited_by,
into = "phone", #on assigne dans quelle colone
regex = (tdv_table$exploited_by,"([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4})" ),
remove = FALSE)
tdv_table <- tdv_table %>% tidyr:: extract(col = exploited_by,
into = "phone",
regex = "(tdv_table$exploited_by,"([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4})" ),
remove = FALSE)
str_extract(tdv_table$exploited_by,"([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4})" )
phone<-extract(tdv_table$exploited_by,"([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4})" )
phone
head phone
phone <- str_extract(tdv_table$exploited_by,"([2-9][0-9]{2})([- .]?)([0-9]{3})([- .])?([0-9]{4})" )
phone
phone <- triblle(phone)
phone <- tribble(phone)
phone <- asdataset(phone)
phone <- as.data.frame(phone)
View(phone)
tdv_table$phone <- phone
View(tdv_table)
post_code <- str_extract(tdv_table$exploited_by,
"^\d{5}-\d{4}|\d{5}|[A-Z]\d[A-Z] \d[A-Z]\d$"
)
post_code <- as.data.frame(post_code)
tdv_table <- post_code
View(tdv_table)
post_code <- str_extract(tdv_table$exploited_by,
"\d{5}-\d{4}|\d{5}|[A-Z]\d[A-Z] \d[A-Z]\d$"
)
post_code <- as.data.frame(post_code)
tdv_table <- post_code
View(tdv_table)
str_extract(tdv_table$exploited_by,
+                          "\d{5}-\d{4}|\d{5}|[A-Z]\d[A-Z] \d[A-Z]\d$"
str_extract(tdv_table$exploited_by,
+                          "/[A-Za-z]\d[A-Za-z] ?\d[A-Za-z]\d/"
str_extract(tdv_table$exploited_by,
+                          "[A-Za-z]\d[A-Za-z] ?\d[A-Za-z]\d"
str_extract(tdv_table$exploited_by,
+                          "[A-Za-z]\[A-Za-z] ?\[A-Za-z]\"
str_extract(tdv_table$exploited_by,
+                          "\[A-Za-z]\[A-Za-z] ?\[A-Za-z]\"
str_extract(tdv_table$exploited_by,
+                          "\[A-Za-z]\[A-Za-z] ?\[A-Za-z]\"
write.csv(tdv_table, C;/)
write.csv(tdv_table, |)
write.csv(tdv_table, \\tdv_table.csv)
write.csv(tdv_table, c:\tdv_table.csv)
write.csv(tdv_table, c:/tdv_table.csv)
write.csv(tdv_table, //tdv_table.csv)
write.csv(tdv_table, "//tdv_table.csv")
write.csv(tdv_table, "c:////tdv_table.csv")
install.packages(rjson)
install.packages("rjson")
write.rjson(tdv_table, "c:////tdv_table.json")
write(tdv_table, "output.json")
install.packages("Sparkr")
install.packages("blogdown")
library(blogdown)
install.packages("xaringanthemer")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF"
)
cli::cli_alert_success("It worked!")
message("Just a friendly message")
warning("This could be bad...")
stop("I hope you're sitting down for this")
tibble::as_tibble(mtcars)
knitr::kable(head(mtcars), format = 'html')
DT::datatable(head(mtcars), fillContainer = FALSE, options = list(pageLength = 4))
library(ggplot2)
(g <- ggplot(mpg) + aes(hwy, cty, color = class) + geom_point())
g + xaringanthemer::theme_xaringan(text_font_size = 16, title_font_size = 18) +
ggtitle("A Plot About Cars")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF"
)
cli::cli_alert_success("It worked!")
message("Just a friendly message")
warning("This could be bad...")
stop("I hope you're sitting down for this")
tibble::as_tibble(mtcars)
knitr::kable(head(mtcars), format = 'html')
DT::datatable(head(mtcars), fillContainer = FALSE, options = list(pageLength = 4))
library(ggplot2)
(g <- ggplot(mpg) + aes(hwy, cty, color = class) + geom_point())
g + xaringanthemer::theme_xaringan(text_font_size = 16, title_font_size = 18) +
ggtitle("A Plot About Cars")
knit_with_parameters("~/FAS1002/Travail_session.Rmd")
unlink("Travail_session_cache", recursive = TRUE)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF"
)
cli::cli_alert_success("It worked!")
message("Just a friendly message")
warning("This could be bad...")
stop("I hope you're sitting down for this")
tibble::as_tibble(mtcars)
knitr::kable(head(mtcars), format = 'html')
DT::datatable(head(mtcars), fillContainer = FALSE, options = list(pageLength = 4))
library(ggplot2)
(g <- ggplot(mpg) + aes(hwy, cty, color = class) + geom_point())
g + xaringanthemer::theme_xaringan(text_font_size = 16, title_font_size = 18) +
ggtitle("A Plot About Cars")
library(tidyverse)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF"
)
cli::cli_alert_success("It worked!")
message("Just a friendly message")
warning("This could be bad...")
stop("I hope you're sitting down for this")
tibble::as_tibble(mtcars)
knitr::kable(head(mtcars), format = 'html')
DT::datatable(head(mtcars), fillContainer = FALSE, options = list(pageLength = 4))
library(ggplot2)
(g <- ggplot(mpg) + aes(hwy, cty, color = class) + geom_point())
g + xaringanthemer::theme_xaringan(text_font_size = 16, title_font_size = 18) +
ggtitle("A Plot About Cars")
unlink("Travail_session_cache", recursive = TRUE)
knit_with_parameters("~/FAS1002/Travail_session.Rmd")
library(knitr)
unlink("Travail_session_cache", recursive = TRUE)
getOption(“rstudio.markdownToHTML”)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF"
)
cli::cli_alert_success("It worked!")
message("Just a friendly message")
warning("This could be bad...")
stop("I hope you're sitting down for this")
tibble::as_tibble(mtcars)
knitr::kable(head(mtcars), format = 'html')
DT::datatable(head(mtcars), fillContainer = FALSE, options = list(pageLength = 4))
library(ggplot2)
(g <- ggplot(mpg) + aes(hwy, cty, color = class) + geom_point())
g + xaringanthemer::theme_xaringan(text_font_size = 16, title_font_size = 18) +
ggtitle("A Plot About Cars")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF"
)
cli::cli_alert_success("It worked!")
message("Just a friendly message")
warning("This could be bad...")
stop("I hope you're sitting down for this")
tibble::as_tibble(mtcars)
knitr::kable(head(mtcars), format = 'html')
DT::datatable(head(mtcars), fillContainer = FALSE, options = list(pageLength = 4))
library(ggplot2)
(g <- ggplot(mpg) + aes(hwy, cty, color = class) + geom_point())
g + xaringanthemer::theme_xaringan(text_font_size = 16, title_font_size = 18) +
ggtitle("A Plot About Cars")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF"
)
cli::cli_alert_success("It worked!")
message("Just a friendly message")
warning("This could be bad...")
stop("I hope you're sitting down for this")
tibble::as_tibble(mtcars)
knitr::kable(head(mtcars), format = 'html')
DT::datatable(head(mtcars), fillContainer = FALSE, options = list(pageLength = 4))
library(ggplot2)
(g <- ggplot(mpg) + aes(hwy, cty, color = class) + geom_point())
g + xaringanthemer::theme_xaringan(text_font_size = 16, title_font_size = 18) +
ggtitle("A Plot About Cars")
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
options(htmltools.dir.version = FALSE)
# a boring regression
fit = lm(dist ~ 1 + speed, data = cars)
coef(summary(fit))
dojutsu = c('地爆天星', '天照', '加具土命', '神威', '須佐能乎', '無限月読')
grep('天', dojutsu, value = TRUE)
par(mar = c(4, 4, 1, .1))
plot(cars, pch = 19, col = 'darkgray', las = 1)
abline(fit, lwd = 2)
knitr::kable(head(iris), format = 'html')
library(leaflet)
leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 17)
DT::datatable(
head(iris, 10),
fillContainer = FALSE, options = list(pageLength = 8)
)
options(htmltools.dir.version = FALSE)
# a boring regression
fit = lm(dist ~ 1 + speed, data = cars)
coef(summary(fit))
dojutsu = c('地爆天星', '天照', '加具土命', '神威', '須佐能乎', '無限月読')
grep('天', dojutsu, value = TRUE)
par(mar = c(4, 4, 1, .1))
plot(cars, pch = 19, col = 'darkgray', las = 1)
abline(fit, lwd = 2)
knitr::kable(head(iris), format = 'html')
library(leaflet)
leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 17)
DT::datatable(
head(iris, 10),
fillContainer = FALSE, options = list(pageLength = 8)
)
